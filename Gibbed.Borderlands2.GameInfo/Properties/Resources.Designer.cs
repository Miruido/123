//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gibbed.Borderlands2.GameInfo.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gibbed.Borderlands2.GameInfo.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  version: 7,
        ///  sets:
        ///  [
        ///    {
        ///      id: 0,
        ///      weapon_types:
        ///      {
        ///        sublibrary_bits: 7,
        ///        asset_bits: 6,
        ///        type: &quot;WillowGame.WeaponTypeDefinition&quot;,
        ///        sublibraries:
        ///        [
        ///          {
        ///            description: &quot;GD_HyperionBunkerBoss.PackageAssetSublibrary_16&quot;,
        ///            package: &quot;GD_HyperionBunkerBoss&quot;,
        ///            assets:
        ///            [
        ///              &quot;Weapon.WeaponTypeTurret_BunkerBossTurret&quot;,
        ///              &quot;Weapon.WeaponType_BunkerBoss_Weapon&quot;,
        ///       [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string AssetLibraryManager {
            get {
                return ResourceManager.GetString("AssetLibraryManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;GD_Artifacts.A_Item.A_AggressionA&quot;:
        ///  {
        ///    type: &quot;GD_Artifacts.A_Item.Artifact_AggressionA&quot;,
        ///    parts:
        ///    {
        ///      mode: &quot;Complete&quot;,
        ///      type: &quot;GD_Artifacts.A_Item.Artifact_AggressionA&quot;,
        ///      alpha: [&quot;GD_Artifacts.Enable1st.EnableFirst_Effect1&quot;],
        ///      beta: [&quot;GD_Artifacts.Enable1st.EnableFirst_Effect2&quot;],
        ///      eta: [&quot;GD_Artifacts.Body.Body_Aggression&quot;],
        ///      theta:
        ///      [
        ///        &quot;GD_Artifacts.Upgrade.Upgrade_Grade0&quot;,
        ///        &quot;GD_Artifacts.Upgrade.Upgrade_Grade1&quot;,
        ///        &quot;GD_Art [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ItemBalanceDefinitions {
            get {
                return ResourceManager.GetString("ItemBalanceDefinitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;GD_Ammodrops.Pickups.AmmoDrop_Assault_Rifle_Bullets&quot;: &quot;UsableItem&quot;,
        ///  &quot;GD_Ammodrops.Pickups.AmmoDrop_Grenade_Protean&quot;: &quot;UsableItem&quot;,
        ///  &quot;GD_Ammodrops.Pickups.AmmoDrop_Patrol_SMG_Clip&quot;: &quot;UsableItem&quot;,
        ///  &quot;GD_Ammodrops.Pickups.AmmoDrop_Repeater_Pistol_Clip&quot;: &quot;UsableItem&quot;,
        ///  &quot;GD_Ammodrops.Pickups.AmmoDrop_Rocket_Launcher&quot;: &quot;UsableItem&quot;,
        ///  &quot;GD_Ammodrops.Pickups.AmmoDrop_Shotgun_Shells&quot;: &quot;UsableItem&quot;,
        ///  &quot;GD_Ammodrops.Pickups.AmmoDrop_Sniper_Rifle_Cartridges&quot;: &quot;UsableItem&quot;,
        ///  &quot;GD_Ammodrops.Pickups_BossO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ItemTypes {
            get {
                return ResourceManager.GetString("ItemTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;GD_Weap_AssaultRifle.A_Weapons.AR_Bandit&quot;:
        ///  {
        ///    type: &quot;GD_Weap_AssaultRifle.A_Weapons.WT_Bandit_AssaultRifle&quot;,
        ///    parts:
        ///    {
        ///      mode: &quot;Additive&quot;,
        ///      type: &quot;GD_Weap_AssaultRifle.A_Weapons.WT_Bandit_AssaultRifle&quot;,
        ///      body: [&quot;GD_Weap_AssaultRifle.Body.AR_Body_Bandit&quot;],
        ///      grip:
        ///      [
        ///        &quot;GD_Weap_AssaultRifle.Grip.AR_Grip_Bandit&quot;,
        ///        &quot;GD_Weap_AssaultRifle.Grip.AR_Grip_Dahl&quot;,
        ///        &quot;GD_Weap_AssaultRifle.Grip.AR_Grip_Jakobs&quot;,
        ///        &quot;GD_Weap_AssaultRifle.Grip.AR [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WeaponBalanceDefinitions {
            get {
                return ResourceManager.GetString("WeaponBalanceDefinitions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;GD_Weap_AssaultRifle.A_Weapons.WT_Bandit_AssaultRifle&quot;: &quot;AssaultRifle&quot;,
        ///  &quot;GD_Weap_AssaultRifle.A_Weapons.WT_Dahl_AssaultRifle&quot;: &quot;AssaultRifle&quot;,
        ///  &quot;GD_Weap_AssaultRifle.A_Weapons.WT_Jakobs_AssaultRifle&quot;: &quot;AssaultRifle&quot;,
        ///  &quot;GD_Weap_AssaultRifle.A_Weapons.WT_Torgue_AssaultRifle&quot;: &quot;AssaultRifle&quot;,
        ///  &quot;GD_Weap_AssaultRifle.A_Weapons.WT_Vladof_AssaultRifle&quot;: &quot;AssaultRifle&quot;,
        ///  &quot;GD_Weap_Launchers.A_Weapons.WT_Bandit_Launcher&quot;: &quot;RocketLauncher&quot;,
        ///  &quot;GD_Weap_Launchers.A_Weapons.WT_Maliwan_Launcher&quot;: &quot;Rocket [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string WeaponTypes {
            get {
                return ResourceManager.GetString("WeaponTypes", resourceCulture);
            }
        }
    }
}
